datapasta::tribble_paste()
library(knitr)
library(rmdformats)
library(tidyverse)
library(devtools)
# figs folder
if (!file.exists("figs")) {
dir.create("figs")
}
# data folder
if (!fs::file_exists("data")) {
fs::dir_create("data")
}
# JSON data
if (!fs::file_exists("data/json")) {
fs::dir_create("data/json")
}
# chunk options
knitr::opts_chunk$set(
echo = TRUE, # show/hide all code
error = TRUE, # hide results
tidy = FALSE, # cleaner code printing
comment = "#> ", # better console printing
eval = TRUE, # turn this to FALSE stop code chunks from running
message = TRUE, # show messages
warning = FALSE, # show warnings
size = "small", # size of the text
fig.path = "figs/", # location of files
fig.height = 5.5, # height of figures
fig.width = 8 # width of figures
)
# knit options
knitr::opts_knit$set(
width = 78,
progress = FALSE
)
# base options
base::options(
tibble.print_max = 25,
tibble.width = 78,
max.print = "1000",
scipen = 100000000
)
options(max.print = 999999)
source("docs/DataUSALocatinoGeo.R")
source("docs/DataUSALocationsGeo.R")
source("docs/DataUSALocationsGeo.R")
knitr::kable(DataUSALocationsGeo)
datapasta::tribble_paste()
source("docs/AvailableSumLevels.R")
knitr::kable(AvailableSumLevels)
source("docs/AvailableSumLevels.R")
AvailableSumlevels <- tibble::tribble(
~sumlevel, ~prefix,                                                           ~description,
"nation",   "010",                                                    "Aggregate US data",
"state",   "040",                            "US States (includin D.C. and Puerto Rico)",
"county",   "050",                                                          "US Counties",
"place",   "160",                                             "Census Designated Places",
"msa",   "310",                                        "Metropolitan Statistical Area",
"puma",   "795", "Public Use Micro Data Sample Area, a census subdivision of US states"
)
source("docs/AvailableSumlevels.R")
knitr::kable(AvailableSumlevels)
source("docs/DataUSAQueryParams.R")
knitr::kable(
DataUSAQueryParams)
datapasta::tribble_paste()
fs::dir_tree(".")
fs::dir_tree("docs")
fs::dir_tree("docs/datausa-api-query-params")
# fs::dir_tree("docs/datausa-api-query-params")
source("docs/datausa-api-query-params/DataUSA_acs.yg.R")
knitr::kable(
DataUSA_acs.yg)
mario_long <- readr::read_file(file = "data/json/mario-long.json")
cat(mario_long)
MarioLongData <- jsonlite::fromJSON(mario_long)
MarioLongData
utils::download.file(url = "https://api.datausa.io/api/?sort=desc&force=acs.yg&show=geo&sumlevel=msa&year=latest",
destfile = "data/json/datausa-acs-yg.json")
asc_yg <- jsonlite::fromJSON("data/json/datausa-acs-yg.json")
str(asc_yg)
USMetroRankData <- base::as.data.frame(us_metro_rank$data)
colnames(USMetroRankData) <- us_metro_rank$headers
USMetroRankData %>% dplyr::glimpse(78)
AcsYgData <- base::as.data.frame(asc_yg$data)
colnames(AcsYgData) <- asc_yg$headers
AcsYgData %>% dplyr::glimpse(78)
AcsYgData <- AcsYgData %>%
dplyr::mutate(
id = geo,
pop = as.integer(pop),
pop_rank = as.integer(pop_rank))
AcsYgData %>% dplyr::glimpse(78)
AcsYgData %>%
# select the three columns we just changed
dplyr::select(id,
pop,
pop_rank) %>%
# arrange these by pop_rank
dplyr::arrange(pop_rank) %>%
# join to the location data
dplyr::left_join(x = .,
y = DataUsaLocData,
by = "id") %>%
dplyr::glimpse(78)
utils::download.file(url = "http://api.datausa.io/attrs/geo/",
destfile = "data/json/geo_attrs.json")
geo_attrs_json <- readr::read_file("data/json/geo_attrs.json")
datausa_locations <- jsonlite::fromJSON(geo_attrs_json)
utils::str(datausa_locations)
DataUsaLocData <- base::as.data.frame(datausa_locations$data)
# assign the names to the data frame
colnames(DataUsaLocData) <- datausa_locations$headers
DataUsaLocData %>% dplyr::glimpse(78)
DataUsaLocData <- base::as.data.frame(datausa_locations$data)
# assign the names to the data frame
colnames(DataUsaLocData) <- datausa_locations$headers
DataUsaLocData %>% dplyr::glimpse(78)
AcsYgData %>%
# select the three columns we just changed
dplyr::select(id,
pop,
pop_rank) %>%
# arrange these by pop_rank
dplyr::arrange(pop_rank) %>%
# join to the location data
dplyr::left_join(x = .,
y = DataUsaLocData,
by = "id") %>%
dplyr::glimpse(78)
AcsLocationData <- AcsYgData %>%
# select the three columns we just changed
dplyr::select(id,
pop,
pop_rank) %>%
# arrange these by pop_rank
dplyr::arrange(pop_rank) %>%
# join to the location data
dplyr::left_join(x = .,
y = DataUsaLocData,
by = "id")
AcsLocationData %>% dplyr::glimpse(78)
AcsLocationData %>%
dplyr::sample_n(
size = 1
)
size = 1)$image_link
size = 1) %>% .]$image_link
AcsLocationData %>%
dplyr::sample_n(
size = 1) %>% .]$image_link
size = 1) %>% []]$image_link
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::sample_n(
size = 1)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::sample_n(
size = 1)
size = 1) %>%
dplyr::select(image_link)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::sample_n(
size = 1) %>%
dplyr::select(image_link)
size = 1) %>%
dplyr::select(image_link) %>%
as_vector()
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::sample_n(
size = 1) %>%
dplyr::select(image_link) %>%
as_vector()
size = 1) %>%
dplyr::select(image_link)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::sample_n(
size = 1) %>%
dplyr::select(image_link)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1) %>%
magick::image_read()
size = 1) %>%
as.vector()
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1) %>%
as.vector()
library(magick)
test_image <- AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1) %>%
base::as.character()
magick::image_read(test_image)
test_image
test_image <- AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1) %>%
base::as.character()
magick::image_read(test_image)
test_image
test_image <- AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1)
test_image
test_image$image_link
test_image$image_link[1]
AcsLocationData <- AcsYgData %>%
# select the three columns we just changed
dplyr::select(id,
pop,
pop_rank) %>%
# arrange these by pop_rank
dplyr::arrange(pop_rank) %>%
# join to the location data
dplyr::left_join(x = .,
y = DataUsaLocData,
by = "id") %>%
# convert this to character
dplyr::mutate(
image_link = as.character(image_link)
)
AcsLocationData %>% dplyr::glimpse(78)
library(magick)
test_image <- AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1) %>%
base::as.character()
magick::image_read(test_image)
library(magick)
test_image <- AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1) %>%
base::as.character()
magick::image_read(test_image)
test_image
magick::image_read(path = test_image)
test_image
magick::image_read(path = test_image)
test_image
library(magick)
test_image <- AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link, display_name) %>%
dplyr::sample_n(
size = 1)
download.file(url = test_image$image_link,
destfile =
paste0("figs/flickr/",
test_image$display_name,
".jpg"))
AcsLocationData <- AcsYgData %>%
# arrange this by the population rank
dplyr::arrange(pop_rank) %>%
# join to the location data
dplyr::left_join(x = .,
y = DataUsaLocData,
by = "id") %>%
# convert this to character
dplyr::mutate(
image_link = as.character(image_link)
)
AcsLocationData %>% dplyr::glimpse(78)
