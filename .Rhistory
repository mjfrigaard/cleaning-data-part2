dplyr::glimpse(78)
utils::download.file(url = "http://api.datausa.io/attrs/geo/",
destfile = "data/json/geo_attrs.json")
geo_attrs_json <- readr::read_file("data/json/geo_attrs.json")
datausa_locations <- jsonlite::fromJSON(geo_attrs_json)
utils::str(datausa_locations)
DataUsaLocData <- base::as.data.frame(datausa_locations$data)
# assign the names to the data frame
colnames(DataUsaLocData) <- datausa_locations$headers
DataUsaLocData %>% dplyr::glimpse(78)
DataUsaLocData <- base::as.data.frame(datausa_locations$data)
# assign the names to the data frame
colnames(DataUsaLocData) <- datausa_locations$headers
DataUsaLocData %>% dplyr::glimpse(78)
AcsYgData %>%
# select the three columns we just changed
dplyr::select(id,
pop,
pop_rank) %>%
# arrange these by pop_rank
dplyr::arrange(pop_rank) %>%
# join to the location data
dplyr::left_join(x = .,
y = DataUsaLocData,
by = "id") %>%
dplyr::glimpse(78)
AcsLocationData <- AcsYgData %>%
# select the three columns we just changed
dplyr::select(id,
pop,
pop_rank) %>%
# arrange these by pop_rank
dplyr::arrange(pop_rank) %>%
# join to the location data
dplyr::left_join(x = .,
y = DataUsaLocData,
by = "id")
AcsLocationData %>% dplyr::glimpse(78)
AcsLocationData %>%
dplyr::sample_n(
size = 1
)
size = 1)$image_link
size = 1) %>% .]$image_link
AcsLocationData %>%
dplyr::sample_n(
size = 1) %>% .]$image_link
size = 1) %>% []]$image_link
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::sample_n(
size = 1)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::sample_n(
size = 1)
size = 1) %>%
dplyr::select(image_link)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::sample_n(
size = 1) %>%
dplyr::select(image_link)
size = 1) %>%
dplyr::select(image_link) %>%
as_vector()
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::sample_n(
size = 1) %>%
dplyr::select(image_link) %>%
as_vector()
size = 1) %>%
dplyr::select(image_link)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::sample_n(
size = 1) %>%
dplyr::select(image_link)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1)
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1) %>%
magick::image_read()
size = 1) %>%
as.vector()
AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1) %>%
as.vector()
library(magick)
test_image <- AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1) %>%
base::as.character()
magick::image_read(test_image)
test_image
test_image <- AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1) %>%
base::as.character()
magick::image_read(test_image)
test_image
test_image <- AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1)
test_image
test_image$image_link
test_image$image_link[1]
AcsLocationData <- AcsYgData %>%
# select the three columns we just changed
dplyr::select(id,
pop,
pop_rank) %>%
# arrange these by pop_rank
dplyr::arrange(pop_rank) %>%
# join to the location data
dplyr::left_join(x = .,
y = DataUsaLocData,
by = "id") %>%
# convert this to character
dplyr::mutate(
image_link = as.character(image_link)
)
AcsLocationData %>% dplyr::glimpse(78)
library(magick)
test_image <- AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1) %>%
base::as.character()
magick::image_read(test_image)
library(magick)
test_image <- AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link) %>%
dplyr::sample_n(
size = 1) %>%
base::as.character()
magick::image_read(test_image)
test_image
magick::image_read(path = test_image)
test_image
magick::image_read(path = test_image)
test_image
library(magick)
test_image <- AcsLocationData %>%
dplyr::filter(!is.na(image_link)) %>%
dplyr::select(image_link, display_name) %>%
dplyr::sample_n(
size = 1)
download.file(url = test_image$image_link,
destfile =
paste0("figs/flickr/",
test_image$display_name,
".jpg"))
AcsLocationData <- AcsYgData %>%
# arrange this by the population rank
dplyr::arrange(pop_rank) %>%
# join to the location data
dplyr::left_join(x = .,
y = DataUsaLocData,
by = "id") %>%
# convert this to character
dplyr::mutate(
image_link = as.character(image_link)
)
AcsLocationData %>% dplyr::glimpse(78)
library(knitr)
library(rmdformats)
library(tidyverse)
library(devtools)
# figs folder
if (!file.exists("figs")) {
dir.create("figs")
}
# data folder
if (!fs::file_exists("data")) {
fs::dir_create("data")
}
# JSON data
if (!fs::file_exists("docs")) {
fs::dir_create("docs")
}
# chunk options
knitr::opts_chunk$set(
echo = TRUE, # show/hide all code
error = TRUE, # hide results
tidy = FALSE, # cleaner code printing
comment = "#> ", # better console printing
eval = TRUE, # turn this to FALSE stop code chunks from running
message = TRUE, # show messages
warning = FALSE, # show warnings
size = "small", # size of the text
fig.path = "figs/", # location of files
fig.height = 5.5, # height of figures
fig.width = 8 # width of figures
)
# knit options
knitr::opts_knit$set(
width = 78,
progress = FALSE
)
# base options
base::options(
tibble.print_max = 25,
tibble.width = 78,
max.print = "1000",
scipen = 100000000
)
options(max.print = 999999)
library(knitr)
library(rmdformats)
library(tidyverse)
library(devtools)
# figs folder
if (!file.exists("figs")) {
dir.create("figs")
}
# data folder
if (!fs::file_exists("data")) {
fs::dir_create("data")
}
# JSON data
if (!fs::file_exists("data/json")) {
fs::dir_create("data/json")
}
# chunk options
knitr::opts_chunk$set(
echo = TRUE, # show/hide all code
error = TRUE, # hide results
tidy = FALSE, # cleaner code printing
comment = "#> ", # better console printing
eval = TRUE, # turn this to FALSE stop code chunks from running
message = TRUE, # show messages
warning = FALSE, # show warnings
size = "small", # size of the text
fig.path = "figs/", # location of files
fig.height = 5.5, # height of figures
fig.width = 8 # width of figures
)
# knit options
knitr::opts_knit$set(
width = 78,
progress = FALSE
)
# base options
base::options(
tibble.print_max = 25,
tibble.width = 78,
max.print = "1000",
scipen = 100000000
)
options(max.print = 999999)
AcsYgData %>% dplyr::glimpse(78)
library(knitr)
library(rmdformats)
library(tidyverse)
library(devtools)
# figs folder
if (!file.exists("figs")) {
dir.create("figs")
}
# data folder
if (!fs::file_exists("data")) {
fs::dir_create("data")
}
# JSON data
if (!fs::file_exists("data/json")) {
fs::dir_create("data/json")
}
# chunk options
knitr::opts_chunk$set(
echo = TRUE, # show/hide all code
error = TRUE, # hide results
tidy = FALSE, # cleaner code printing
comment = "#> ", # better console printing
eval = TRUE, # turn this to FALSE stop code chunks from running
message = TRUE, # show messages
warning = FALSE, # show warnings
size = "small", # size of the text
fig.path = "figs/", # location of files
fig.height = 5.5, # height of figures
fig.width = 8 # width of figures
)
# knit options
knitr::opts_knit$set(
width = 78,
progress = FALSE
)
# base options
base::options(
tibble.print_max = 25,
tibble.width = 78,
max.print = "1000",
scipen = 100000000
)
options(max.print = 999999)
library(RJSONIO)
library(rjson)
library(jsonlite)
mario_wide <- readr::read_file(file = "data/json/mario-wide.json")
cat(mario_wide)
MarioWideData <- jsonlite::fromJSON(mario_wide)
MarioWideData
mario_long <- readr::read_file(file = "data/json/mario-long.json")
cat(mario_long)
MarioLongData <- jsonlite::fromJSON(mario_long)
MarioLongData
source("docs/datausa-api-query-params/DataUSALocationsGeo.R")
knitr::kable(DataUSALocationsGeo)
source("docs/datausa-api-query-params/AvailableSumlevels.R")
knitr::kable(AvailableSumlevels)
source("docs/datausa-api-query-params/DataUSAQueryParams.R")
knitr::kable(
DataUSAQueryParams)
utils::download.file(url = "http://api.datausa.io/attrs/geo/",
destfile = "data/json/geo_attrs.json")
geo_attrs_json <- readr::read_file("data/json/geo_attrs.json")
datausa_locations <- jsonlite::fromJSON(geo_attrs_json)
utils::str(datausa_locations)
DataUsaLocData <- base::as.data.frame(datausa_locations$data)
# assign the names to the data frame
colnames(DataUsaLocData) <- datausa_locations$headers
DataUsaLocData %>% dplyr::glimpse(78)
# fs::dir_tree("docs/datausa-api-query-params")
source("docs/datausa-api-query-params/DataUSA_acs.yg.R")
knitr::kable(
DataUSA_acs.yg)
utils::download.file(url = "https://api.datausa.io/api/?sort=desc&force=acs.yg&show=geo&sumlevel=msa&year=latest",
destfile = "data/json/datausa-acs-yg.json")
asc_yg <- jsonlite::fromJSON("data/json/datausa-acs-yg.json")
str(asc_yg)
AcsYgData <- base::as.data.frame(asc_yg$data)
colnames(AcsYgData) <- asc_yg$headers
AcsYgData %>% dplyr::glimpse(78)
AcsYgData <- AcsYgData %>%
dplyr::mutate(
id = geo,
pop = as.integer(pop),
pop_rank = as.integer(pop_rank))
AcsYgData %>% dplyr::glimpse(78)
library(knitr)
library(rmdformats)
library(tidyverse)
library(devtools)
# figs folder
if (!file.exists("figs")) {
dir.create("figs")
}
# data folder
if (!fs::file_exists("data")) {
fs::dir_create("data")
}
# JSON data
if (!fs::file_exists("docs")) {
fs::dir_create("docs")
}
# chunk options
knitr::opts_chunk$set(
echo = TRUE, # show/hide all code
error = TRUE, # hide results
tidy = FALSE, # cleaner code printing
comment = "#> ", # better console printing
eval = TRUE, # turn this to FALSE stop code chunks from running
message = TRUE, # show messages
warning = FALSE, # show warnings
size = "small", # size of the text
fig.path = "figs/", # location of files
fig.height = 5.5, # height of figures
fig.width = 8 # width of figures
)
# knit options
knitr::opts_knit$set(
width = 78,
progress = FALSE
)
# base options
base::options(
tibble.print_max = 25,
tibble.width = 78,
max.print = "1000",
scipen = 100000000
)
options(max.print = 999999)
fs::dir_ls("figs")
# fs::dir_ls("figs")
knitr::include_graphics("figs/01-openrefine.png")
fs::dir_ls("figs")
# fs::dir_ls("figs")
knitr::include_graphics("figs/02-data-storage.png")
fs::dir_ls("figs")
fs::dir_ls("figs")
knitr::include_graphics("figs/03-janitor-work.png")
# fs::dir_ls("figs")
knitr::include_graphics("figs/03-janitor-work.png")
knitr::include_graphics("figs/02-data-storage.png")
fs::dir_ls("figs")
fs::dir_ls("figs")
# fs::dir_ls("figs")
knitr::include_graphics("figs/8.1-data-types.png")
fs::dir_ls("figs")
# fs::dir_ls("figs")
knitr::include_graphics("figs/05-plain-text.png")
fs::dir_ls("figs")
# fs::dir_ls("figs")
knitr::include_graphics("figs/06-binary.png")
fs::dir_ls("figs")
# fs::dir_ls("figs")
knitr::include_graphics("figs/07-rectangles.png")
fs::dir_ls("figs")
# fs::dir_ls("figs")
knitr::include_graphics("figs/08-xml-json.png")
# fs::dir_ls("figs")
knitr::include_graphics("figs/08-xml-json.png")
fs::dir_ls("figs")
knitr::include_graphics("figs/09-api-request.png")
# fs::dir_ls("figs")
knitr::include_graphics("figs/09-api-request.png")
fs::dir_ls("figs")
# fs::dir_ls("figs")
knitr::include_graphics("figs/13-json.png")
fs::dir_ls("figs")
# fs::dir_ls("figs")
knitr::include_graphics("figs/14-xml.png")
fs::dir_ls("figs")
knitr::include_graphics("figs/09-api-request.png")
fs::dir_ls("figs")
# fs::dir_ls("figs")
knitr::include_graphics("figs/16-api-cat.png")
fs::dir_ls("figs")
# fs::dir_ls("figs")
knitr::include_graphics("figs/17-api.png")
fs::dir_ls("figs")
knitr::include_graphics("figs/18-api.png")
fs::dir_ls("figs")
knitr::include_graphics("figs/18.1-api.png")
fs::dir_ls("figs")
knitr::include_graphics("figs/18.1-api.png")
fs::dir_ls("figs")
fs::dir_ls("figs")
# knitr::include_graphics("figs/19-cat-api.png")
# fs::dir_ls("figs")
# knitr::include_graphics("figs/19-cat-api.png")
# fs::dir_ls("figs")
knitr::include_graphics("figs/19-cat-api.png")
fs::dir_ls("figs")
# fs::dir_ls("figs")
knitr::include_graphics("figs/21-cols.png")
fs::dir_ls("figs")
knitr::include_graphics("figs/22-create-cols.png")
fs::dir_ls("figs", regexp = "23")
fs::dir_ls("figs", regexp = "23")
knitr::include_graphics("figs/23-arrange-cols.png")
# fs::dir_ls("figs", regexp = "23")
knitr::include_graphics("figs/23-arrange-cols.png")
fs::dir_ls("figs", regexp = "24")
fs::dir_ls("figs", regexp = "25")
knitr::include_graphics("figs/25-mapquest-api-key.png")
fs::dir_ls("figs", regexp = "25")
# fs::dir_ls("figs", regexp = "25")
knitr::include_graphics("figs/25.1-approve-keys.png")
fs::dir_ls("figs", regexp = "26")
fs::dir_ls("figs", regexp = "27")
fs::dir_ls("figs", regexp = "27")
# fs::dir_ls("figs", regexp = "27")
knitr::include_graphics("figs/27-api-request.png")
fs::dir_ls("figs", regexp = "28")
knitr::include_graphics("figs/28-openrefine-api-request.png")
fs::dir_ls("figs", regexp = "29")
# fs::dir_ls("figs", regexp = "29")
knitr::include_graphics("figs/29-json-download.png")
fs::dir_ls("figs", regexp = "30")
knitr::include_graphics("figs/30-json-col.png")
fs::dir_ls("figs", regexp = "30")
fs::dir_ls("figs", regexp = "21")
fs::dir_ls("figs", regexp = "31")
# fs::dir_ls("figs", regexp = "31")
knitr::include_graphics("figs/31-parse-lat.png")
fs::dir_ls("figs", regexp = "32")
# fs::dir_ls("figs", regexp = "32")
knitr::include_graphics("figs/32-parse-lon.png")
# fs::dir_ls("figs")
knitr::include_graphics("figs/02-data-storage.png")
fs::dir_ls("figs")
knitr::include_graphics("figs/03-janitor-work.png")
fs::dir_ls("figs")
